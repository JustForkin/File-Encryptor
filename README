===================
Introduction
===================
This repository contains code to encrypt and decrypt any file into an already existing image. The decryptor only decrypts images encrypted by the given encryptor. The images that are used are PNG files because they store 4 color channels, and are the most common types online.
===================
Instructions
===================
To use, simply make a new directory, move in the file to convert, the image file, and the three class files, and use the following commands:

To Encrypt:
java Encryptor nameOfFileToEncrypt [imageFileName [-STR]]
To Decrypt:
java Decryptor nameOfImageFileToDecrypt


The strong encryption option -STR instructs the command to use is a special encryption method in which the data is not directly stored in the image, but rather something generated from the given data is stored. When decrypted, the generated information is used to find the original information. It makes sure that if the image caused suspicion, and the bit information was gathered, the original file will not be compromised and will most likely be overlooked.

Of course, if the interceptor finds my program, and uses it to decrypt the image, the data can be found.  

If the image or data files are large, make sure to provide sufficient memory for JVM's heap.
Here is an example of the run command for the files in the Test3 directory.

java -Xmx1024M Encryptor Science\ Is\ Fun.mp3 awesome\ face.png

Larger data and images take more time. A 5000 by 5000 image loading a 6.5 MB file takes 30 seconds. This will be optimized soon.


Once again, please make sure that this is a PNG file that is provided.

===================
History
===================
----------------
Wednesday Jul 13
----------------
18:00 - Initial code set up.
----------------
Thursday Jul 14
----------------
02:53 - Finished version 0.1.0
Includes basic functionality of encryption and decryption
----------------
Wednesday Aug 31
----------------
17:31 - Finished version 0.1.5
Includes the name of the file in the encryption technique
===================
Author
===================
These solutions were created by Kaushik Shankar.
student.kaushik (at) gmail.com
===================
Permissions
===================
The information contained within my files can be used freely for noncommercial purposes.
Permission to use the information contained within my files is required before commercial use.
For both cases, acknowledgement is required.
